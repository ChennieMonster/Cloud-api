<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cloud.api.mapper.ApplicationMapper">

	<resultMap id="BaseResultMap"
		type="com.cloud.api.dto.ApplicationDTO">
		<result column="uuid" jdbcType="VARCHAR" property="uuid" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="display_name" jdbcType="VARCHAR"
			property="displayName" />
		<result column="status" jdbcType="VARCHAR" property="status" />
		<result column="description" jdbcType="VARCHAR"
			property="description" />
		<result column="dept_level" jdbcType="INTEGER"
			property="deptLevel" />
		<result column="created_time" jdbcType="TIMESTAMP"
			property="createdTime" />
		<result column="updated_time" jdbcType="TIMESTAMP"
			property="updatedTime" />
		<result column="parameters" jdbcType="VARCHAR"
			property="parameters" />
		<result column="is_registry" jdbcType="INTEGER"
			property="isRegistry" />
			<result column="project" jdbcType="VARCHAR"
			property="project" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>

	<sql id="Base_Column_List">
		uuid, name, display_name, status,description,dept_level,
		created_time,
		updated_time, parameters,is_registry,project
	</sql>

	<select id="getApplications" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from application
		<!-- <![CDATA[ app left join dept d on app.iDeptLevel <= d.iDeptLevel left 
			join user u on d.sDeptId = u.sDeptId where u.susername = #{username,jdbcType=VARCHAR}]]> -->
	</select>

	<select id="queryApplicationByUuid"
		parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from application where uuid = #{uuid,jdbcType=VARCHAR}
	</select>
	
	<select id="queryApplicationByUuidByName"
		parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from application where name = #{name,jdbcType=VARCHAR}
	</select>
	

	<insert id="insertApplication"
		parameterType="com.cloud.api.dto.ApplicationDTO">
		insert into application (uuid, name, display_name,
		status,description,dept_level, created_time, parameters,is_registry,project)
		values
		(#{uuid,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR},#{displayName,jdbcType=VARCHAR},#{status,jdbcType=VARCHAR},
		#{description,jdbcType=VARCHAR},
		#{deptLevel,jdbcType=INTEGER},#{createdTime,jdbcType=TIMESTAMP},#{parameters,jdbcType=VARCHAR},#{isRegistry,jdbcType=INTEGER},#{project,jdbcType=VARCHAR})
</insert>

		<delete id="deleteApplication" parameterType="java.lang.String">
			delete from
			application where uuid = #{uuid,jdbcType=VARCHAR}
		</delete>

		<delete id="deleteApplications" parameterType="java.util.List">
			delete from application where uuid in
			<foreach collection="list" index="index" item="uuids"
				open="(" separator="," close=")">
				#{uuids}
			</foreach>

		</delete>

		<update id="updateApplication"
			parameterType="com.cloud.api.dto.ApplicationDTO">
			update application set display_name = #{displayName,jdbcType=VARCHAR},
			description = #{description,jdbcType=VARCHAR}
			<if test="status != null and status !=''">
				,status = #{status,jdbcType=VARCHAR}
			</if>
			<if test="updatedTime != null ">
				,updated_time = #{updatedTime,jdbcType=VARCHAR}
			</if>
			where uuid = #{uuid,jdbcType=VARCHAR}
		</update>

		<select id="selectByExample"
			parameterType="com.cloud.api.dto.ApplicationDTOExample"
			resultMap="BaseResultMap">
			<!-- WARNING - @mbg.generated This element is automatically generated 
				by MyBatis Generator, do not modify. -->
			select
			<!-- <if test="distinct"> distinct </if> -->
			<include refid="Base_Column_List" />
			from application
			<if test="_parameter != null">
				<include refid="Example_Where_Clause" />
			</if>
			<if test="orderByClause != null">
				order by ${orderByClause}
			</if>
		</select>

		<select id="countByExample"
			parameterType="com.cloud.api.dto.ApplicationDTOExample"
			resultType="java.lang.Long">
			<!-- WARNING - @mbg.generated This element is automatically generated 
				by MyBatis Generator, do not modify. -->
			select count(*) from application
			<if test="_parameter != null">
				<include refid="Example_Where_Clause" />
			</if>
		</select>
		
	<resultMap id="ApplicationMap" type="com.cloud.api.dto.ApplicationDTO">
		<id column="uuid" jdbcType="VARCHAR" property="uuid" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="display_name" jdbcType="VARCHAR"
			property="displayName" />
		<result column="status" jdbcType="VARCHAR" property="status" />
		<result column="description" jdbcType="VARCHAR"
			property="description" />
		<result column="dept_level" jdbcType="INTEGER"
			property="deptLevel" />
		<result column="created_time" jdbcType="TIMESTAMP"
			property="createdTime" />
		<result column="updated_time" jdbcType="TIMESTAMP"
			property="updatedTime" />
		<result column="parameters" jdbcType="VARCHAR"
			property="parameters" />
		<result column="is_registry" jdbcType="INTEGER"
			property="isRegistry" />
			<result column="project" jdbcType="VARCHAR"
			property="project" />
		 <collection property="objectList" ofType="java.lang.String" javaType="java.util.List">
            <result column="objects"/>
        </collection>
	</resultMap>
	
	<select id="selectAppResourceByProject" parameterType="string" resultMap="ApplicationMap">
		select t1.*, t2.objects from application t1,instance t2 where t1.is_registry=0 and t1.project=#{project} and t1.uuid = t2.application_id 	
	</select>
</mapper>