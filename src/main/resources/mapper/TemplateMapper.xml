<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cloud.api.mapper.TemplateMapper">

	<resultMap id="BaseResultMap"
		type="com.cloud.api.dto.TemplateDTO">
		<result column="uuid" jdbcType="VARCHAR" property="uuid" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="display_name" jdbcType="VARCHAR"
			property="displayName" />
		<result column="description" jdbcType="VARCHAR"
			property="description" />
		<result column="type" jdbcType="VARCHAR" property="type" />
		<result column="instance_count" jdbcType="INTEGER"
			property="instanceCount" />
		<result column="created_time" jdbcType="TIMESTAMP"
			property="createdTime" />
		<result column="updated_time" jdbcType="TIMESTAMP"
			property="updatedTime" />
		<result column="api_version" jdbcType="VARCHAR"
			property="apiVersion" />
		<result column="metadata" jdbcType="VARCHAR"
			property="metadata" />
		<result column="objects" jdbcType="VARCHAR" property="objects" />
		<result column="labels" jdbcType="VARCHAR" property="labels" />
		<result column="parameters" jdbcType="VARCHAR"
			property="parameters" />
		<result column="project" jdbcType="VARCHAR"
			property="project" />
		<result column="is_market" jdbcType="INTEGER"
			property="isMarket" />
	</resultMap>

	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		uuid, name, display_name, type,description, instance_count, created_time,
		updated_time,api_version,metadata,objects, labels, parameters, project, is_market
	</sql>

	<select id="queryTemplateList" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select <include refid="Base_Column_List" /> from
		template where type = #{type,jdbcType=VARCHAR}
	</select>

	<select id="queryTemplateByUuid"
		parameterType="java.lang.String" resultMap="BaseResultMap">
		select <include refid="Base_Column_List" /> from template where uuid =
		#{uuid,jdbcType=VARCHAR}
	</select>
	
	<select id="queryTemplateByName"
		parameterType="java.lang.String" resultMap="BaseResultMap">
		select <include refid="Base_Column_List" /> from template where name = #{name,jdbcType=VARCHAR} and project = #{project,jdbcType=VARCHAR}
	</select>

	<insert id="insertTemplate"
		parameterType="com.cloud.api.dto.TemplateDTO">
		insert into template (uuid, name, display_name,
		type,description, instance_count,
		created_time,updated_time,api_version,metadata,objects,labels,
		parameters,project,is_market)
		values
		(#{uuid,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR},#{displayName,jdbcType=VARCHAR},#{type,jdbcType=VARCHAR},#{description,jdbcType=VARCHAR},
		#{instanceCount,jdbcType=INTEGER},#{createdTime,jdbcType=TIMESTAMP},#{updatedTime,jdbcType=TIMESTAMP},#{apiVersion,jdbcType=VARCHAR},
		#{metadata,jdbcType=VARCHAR},#{objects,jdbcType=VARCHAR},#{labels,jdbcType=VARCHAR},#{parameters,jdbcType=VARCHAR},
		#{project,jdbcType=VARCHAR},#{isMarket,jdbcType=INTEGER})
	</insert>

	<delete id="deleteTemplate" parameterType="java.lang.String">
		delete from template where uuid = #{uuid,jdbcType=VARCHAR}
	</delete>

	<delete id="deleteTemplates" parameterType="java.util.List">
		delete from template where uuid in
		<foreach collection="list" index="index" item="ids" open="("
			separator="," close=")">
			#{ids}
		</foreach>
	</delete>

	<update id="updateTemplateById"
		parameterType="com.cloud.api.dto.TemplateDTO">
		update template set
		description = #{description,jdbcType=VARCHAR},
		display_name = #{displayName,jdbcType=VARCHAR}
		<if test="type != null and type !=''">
			,type = #{type}
		</if>
		<if test="instanceCount != null and instanceCount !=''">
			,instance_count = #{instanceCount}
		</if>
		<if test="updatedTime != null ">
			,updated_time = #{updatedTime}
		</if>
		<if test="apiVersion != null and apiVersion !='' ">
			,api_version = #{apiVersion}
		</if>
		<if test="metadata != null and metadata !='' ">
			,metadata = #{metadata}
		</if>
		<if test="objects != null and objects !='' ">
			,objects = #{objects}
		</if>
		<if test="parameters != null">
			,parameters = #{parameters}
		</if>
		where uuid = #{uuid,jdbcType=VARCHAR}
	</update>

	<select id="countByExample"
		parameterType="com.cloud.api.dto.TemplateDTOExample"
		resultType="java.lang.Long">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select count(*) from template
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<select id="selectByExample"
		parameterType="com.cloud.api.dto.TemplateDTOExample"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from template
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>

</mapper>