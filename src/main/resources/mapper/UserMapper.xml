<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cloud.api.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.cloud.api.dto.UserDTO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="display_name" jdbcType="VARCHAR" property="displayName" />
    <result column="dept" jdbcType="VARCHAR" property="dept" />
    <result column="emp_id" jdbcType="VARCHAR" property="empId" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="mail" jdbcType="VARCHAR" property="mail" />
    <result column="language" jdbcType="VARCHAR" property="language" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="rstatus" jdbcType="INTEGER" property="rstatus" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
   <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    uuid, user_name, display_name, dept, emp_id, password, telephone, mail, language, 
    created_time, rstatus, updated_time
  </sql>
  <select id="selectByExample" parameterType="com.cloud.api.dto.UserDTOExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from user
    where uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user
    where uuid = #{uuid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cloud.api.dto.UserDTOExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cloud.api.dto.UserDTO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user (uuid, user_name, display_name, 
      dept, emp_id, password, 
      telephone, mail, language, 
      created_time, rstatus, updated_time
      )
    values (#{uuid,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{displayName,jdbcType=VARCHAR}, 
      #{dept,jdbcType=VARCHAR}, #{empId,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{mail,jdbcType=VARCHAR}, #{language,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{rstatus,jdbcType=INTEGER}, #{updatedTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cloud.api.dto.UserDTO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="displayName != null">
        display_name,
      </if>
      <if test="dept != null">
        dept,
      </if>
      <if test="empId != null">
        emp_id,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="mail != null">
        mail,
      </if>
      <if test="language != null">
        language,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="rstatus != null">
        rstatus,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="displayName != null">
        #{displayName,jdbcType=VARCHAR},
      </if>
      <if test="dept != null">
        #{dept,jdbcType=VARCHAR},
      </if>
      <if test="empId != null">
        #{empId,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="language != null">
        #{language,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rstatus != null">
        #{rstatus,jdbcType=INTEGER},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cloud.api.dto.UserDTOExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    <set>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.displayName != null">
        display_name = #{record.displayName,jdbcType=VARCHAR},
      </if>
      <if test="record.dept != null">
        dept = #{record.dept,jdbcType=VARCHAR},
      </if>
      <if test="record.empId != null">
        emp_id = #{record.empId,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.mail != null">
        mail = #{record.mail,jdbcType=VARCHAR},
      </if>
      <if test="record.language != null">
        language = #{record.language,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rstatus != null">
        rstatus = #{record.rstatus,jdbcType=INTEGER},
      </if>
      <if test="record.updatedTime != null">
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    set uuid = #{record.uuid,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      display_name = #{record.displayName,jdbcType=VARCHAR},
      dept = #{record.dept,jdbcType=VARCHAR},
      emp_id = #{record.empId,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      mail = #{record.mail,jdbcType=VARCHAR},
      language = #{record.language,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      rstatus = #{record.rstatus,jdbcType=INTEGER},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cloud.api.dto.UserDTO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="displayName != null">
        display_name = #{displayName,jdbcType=VARCHAR},
      </if>
      <if test="dept != null">
        dept = #{dept,jdbcType=VARCHAR},
      </if>
      <if test="empId != null">
        emp_id = #{empId,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        mail = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="language != null">
        language = #{language,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rstatus != null">
        rstatus = #{rstatus,jdbcType=INTEGER},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cloud.api.dto.UserDTO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      display_name = #{displayName,jdbcType=VARCHAR},
      dept = #{dept,jdbcType=VARCHAR},
      emp_id = #{empId,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      mail = #{mail,jdbcType=VARCHAR},
      language = #{language,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      rstatus = #{rstatus,jdbcType=INTEGER},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  
	<select id="queryUserList" parameterType="map" resultType="map">
		select distinct 
			user.uuid,user.user_name,user.display_name,user.emp_id,user.dept,user.telephone,user.mail,user.language,user.rstatus,
			DATE_FORMAT(user.created_time,'%Y-%m-%d %H:%i:%S') as created_time 
		from user where 1=1 
		<if test="userName != null and userName != ''">
		and user.user_name=#{userName} 
		</if>
		<if test="empId != null and empId != ''">
		and user.emp_id=#{empId} 
		</if>
		<if test="dept != null and dept != ''" >
        and user.dept=#{dept} 
        </if>
        <if test="userId != null and userId != ''" >
        and user.uuid =#{userId}
        </if>
		order by created_time desc
	</select>
	
	<select id="queryProjectRoleUser" parameterType="map" resultType="map">
	select `a`.`uuid` AS `uuid`,`a`.`user_id` AS `user_id`,`a`.`role_id` AS
	`role_id`,`a`.`pro_id` AS `pro_id`,`a`.`region_id` AS
	`region_id`,`a`.`created_time` AS `created_time`,`a`.`rstatus` AS
	`rstatus`,`a`.`creater` AS `creater`,`user`.`user_name` AS
	`user_name`,`role`.`role_name` AS `role_name`,`project`.`name` AS
	`pro_name`,`project`.`display_name` AS `pro_display_name`,`region`.`name` AS `region_name` from ((((`user_role_pro`
	`a` left join `user` on((`user`.`uuid` = `a`.`user_id`))) left join
	`sys_role` `role` on((`a`.`role_id` = `role`.`uuid`))) left join
	`project` on((`a`.`pro_id` = `project`.`uuid`))) left join `region`
	on((`a`.`region_id` = `region`.`uuid`)))
		where 1=1 
		<if test="rstatus != null and rstatus != ''">
			and a.rstatus=${rstatus} 
		</if>
		<if test="userName != null and userName != ''">
			and user.user_name=#{userName} 
		</if>
		<if test="userId != null and userId != ''">
			and a.user_id=#{userId} 
		</if>
        <if test="projectId != null and projectId != ''" >
        	and a.pro_id = #{projectId} 
        </if>
        <if test="roleId != null and roleId != ''" >
        	and a.role_id = #{roleId} 
        </if>
	</select>
	
	<select id="userDetailById" parameterType="java.lang.String" resultType="java.util.HashMap">
    	select user.*,urr.role_id,urr.role_name from user, user_role_rel urr 
    	where user.uuid=#{userId} and user.uuid=urr.user_id
  	</select>
  	
  	<select id="countUserProjectRole" parameterType="map" resultType="java.lang.Long">
    	select count(*) from user_role_pro 
  	</select>

	<update id="modifyUser" parameterType="map">
		update user 
		set updated_time = now() 
		<if test="displayname != null and displayname != ''">
			,display_name = #{displayname}
		</if>
		<if test="telephone != null and telephone != ''">
			,telephone = #{telephone}
		</if>
		<if test="mail != null and mail != ''">
			,mail = #{mail}
		</if>
		<if test="empId != null and empId != ''">
			,emp_id = #{empId}
		</if>
		<if test="dept != null and dept != ''">
			,dept = #{dept}
		</if>
		where uuid=#{userId} 
	</update>
	
	<insert id="insertAllUserRole" parameterType="map">
		insert into user_role_rel(user_id,role_id,role_name,created_time,creater) 
		values
		<foreach collection="roleInfo" item="item" separator=",">
		(
			#{userId},#{item.uuid},#{item.role_name},now(),#{creater}
		)
		</foreach>
	</insert>
	
	<delete id="deleteProjectRoleUser" parameterType="map">
		delete from user_role_pro where rstatus=0 
		<if test="userId != null and userId != ''">
			and user_id = #{userId} 
		</if>
		<if test="roleId != null and roleId != ''">
			and role_id = #{roleId} 
		</if>
		<if test="projectId != null and projectId != ''">
			and pro_id = #{projectId} 
		</if>
		<if test="regionId != null and regionId != ''">
			and region_id = #{regionId} 
		</if>
		<if test="uuid != null and uuid != ''">
			and uuid in (${uuid})
		</if>
	</delete>
	
	<delete id="deleteUserRole" parameterType="map">
		delete from user_role_rel where user_id=#{userId} 
		<if test="roleId != null and roleId != ''">
			and role_id = ${roleId} 
		</if>
	</delete>
	
	<insert id="insertUserProject" parameterType="map">
		insert into user_pro_rel(user_id,pro_id,pro_name,created_time,creater) 
		values(#{userId},#{projectId},#{projectName},now(),#{creater})
	</insert>
	
	<delete id="deleteUserProject" parameterType="map">
		delete from user_pro_rel where user_id=#{userId} 
		<if test="projectId != null and projectId != ''">
			and pro_id = #{projectId} 
		</if>
	</delete>
	
	<delete id="deleteProjectUser" parameterType="java.util.List">
		delete from user_pro_rel where pro_id=#{projectId} and user_id in
		<foreach collection="ids" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
	<delete id="delAllRoleUser" parameterType="java.util.List">
		delete from user_role_rel where 1=1 and rstatus='0' 
		<if test="roleId != null and roleId != ''">
			and role_id=#{roleId} 
		</if>
		<if test="userId != null and userId != ''">
			and user_id=#{userId} 
		</if>
		<if test="roleName != null and roleName != ''">
			and role_name=#{roleName} 
		</if>
        <if test="roleIds != null and roleIds != ''">
            and role_id in(${roleIds})
        </if>
	</delete>
	
	<delete id="delAllProUser" parameterType="java.util.List">
		delete from user_role_pro where rstatus=0 
		<if test="projectId != null and projectId != ''">
			and pro_id=#{projectId} 
		</if>
		<if test="userId != null and userId != ''">
			and user_id=#{userId} 
		</if>
		<if test="roleId != null and roleId != ''">
			and role_id=#{roleId} 
		</if>
		<if test="roleIds != null and roleIds != ''">
            and role_id in(${roleIds})
        </if>
	</delete>
	
	<insert id="addProjectRoleUser" parameterType="map">
		insert into user_role_pro(user_id,role_id,pro_id,region_id,rstatus,creater,created_time)
		values 
		(
			#{userId},#{roleId},#{projectId},#{regionId},#{rstatus},#{creater},now()
		)
	</insert>
	
	<select id="queryUserRoleInfo" parameterType="map" resultType="map">
			select user.*,urr.role_id,urr.role_name from user, user_role_rel urr 
    	where user.uuid=urr.user_id 
    	<if test="userId != null and userId != ''">
			and user.uuid=#{userId} 
		</if>
		<if test="userName != null and userName != ''">
			and user.user_name=#{userName} 
		</if>
		<if test="rstatus != null and rstatus != ''">
			and urr.rstatus=#{rstatus} 
		</if>
	</select>
	
	<select id="queryUserProInfo" parameterType="map" resultType="map">
			select user.*,upr.pro_id,upr.pro_name from user, user_pro_rel upr 
    	where user.uuid=upr.user_id 
    	<if test="userId != null and userId != ''">
			and user.uuid=#{userId} 
		</if>
		<if test="userName != null and userName != ''">
			and user.user_name=#{userName} 
		</if>
	</select>
	
	<insert id="addUserInfo" parameterType="map">
		insert into user(uuid,user_name,display_name,password,rstatus,language,created_time) 
		values(#{userId},#{userName},#{userName},#{passward},0,'English',now())
	</insert>
	
	<select id="queryUserByName" resultType="java.util.HashMap">
		select * from user where user_name=#{userName}
	</select>
	
</mapper>